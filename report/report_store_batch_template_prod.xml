<?xml version="1.0" encoding="utf-8" ?>
<odoo>
    <data>
    <template id="report_store_batch_template_prod" t-name="store_product_batch.report_store_batch_template_prod">
      <t t-call="web.html_container">
        <t t-call="web.internal_layout">
          <t class="mb-4">
          

           
           <div id="chart_controls" style="display: flex; gap: 12px; flex-wrap: wrap;">

            <div class="form-group" style="max-width: 150px; width: 100%; flex: 1 1 200px; height: 60px;">
              <select id="branchSelect" class="form-control" style="height: 40px;"></select>
            </div>

            <div class="form-group" style="max-width: 150px; width: 100%; flex: 1 1 200px; height: 60px;">
              <select id="yearSelect" class="form-control" style="height: 40px;"></select>
            </div>

            <div class="form-group" id="monthSection" style="max-width: 150px; width: 100%; flex: 1 1 200px; height: 60px;">
              <select id="monthSelect" class="form-control" style="height: 40px;"></select>
            </div>

            <button id="resetBtn" class="btn btn-outline-danger" style="max-width: 150px; width: 100%; flex: 1 1 200px; height: 40px;">
              Reset
            </button>
          </div>




          <div id="my_chart" style="height:400px;"></div>

            <script src="https://cdn.jsdelivr.net/npm/echarts/dist/echarts.min.js"></script>
            <script>
              document.addEventListener('DOMContentLoaded', function () {
              const yearSelect = document.getElementById('yearSelect');
              const monthSelect = document.getElementById('monthSelect');
              const dayView = document.getElementById('dayView');
              const resetBtn = document.getElementById('resetBtn');

              const chartDom = document.getElementById('my_chart');
              const chart = echarts.init(chartDom);


              const branchSelect = document.getElementById('branchSelect');

                // Disable year/month until branch is selected
                yearSelect.disabled = true;
                monthSelect.disabled = true;
                

                // Fetch branches on load
                fetch('/store_product_batch/get_branches_prod', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({})
                })
                  .then(res => res.json())
                  .then(data => {
                    branchSelect.innerHTML = '-- اختر الفرع --';

                    const placeholder = document.createElement('option');
                    placeholder.value = '';
                    placeholder.textContent = '';
                    placeholder.disabled = true;
                    placeholder.selected = true;
                    branchSelect.appendChild(placeholder);

                    data.result.branches.forEach(branch => {
                      const option = document.createElement('option');
                      option.value = branch.id;
                      option.textContent = branch.name;
                      branchSelect.appendChild(option);
                    });

                    // Auto-select first branch if available
                    if (data.result.branches.length > 0) {
                      branchSelect.value = data.result.branches[0].id;
                      triggerYearFetch(data.result.branches[0].id);
                     
                    }
                  });

                // Branch selection triggers year fetch
                branchSelect.addEventListener('change', function () {
                  const selectedBranchId = this.value;
                  if (!selectedBranchId) return;

                  triggerYearFetch(selectedBranchId);
                });

                // Fetch years for selected branch
                function triggerYearFetch(branchId) {
                  yearSelect.disabled = false;
                  fetch('/store_product_batch/get_years_prod', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ branch_id: branchId })
                  })
                    .then(res => res.json())
                    .then(data => {
                      yearSelect.innerHTML = '';

                      const placeholder = document.createElement('option');
                      placeholder.value = '';
                      placeholder.textContent = '-- اختر السنة --';
                      placeholder.disabled = true;
                      placeholder.selected = true;
                      yearSelect.appendChild(placeholder);

                      data.result.years.forEach(year => {
                        const option = document.createElement('option');
                        option.value = year;
                        option.textContent = year;
                        yearSelect.appendChild(option);
                      });
                      updateChartWithDateContext(branchId, null, null);
                    });
                }

              <!-- dayView.parentElement.querySelector('label').classList.add('disabled'); -->
              
      
              

              // Year selection
              yearSelect.addEventListener('change', function () {
                const selectedYear = this.value;
                monthSelect.innerHTML = '';
                monthSelect.disabled = true;

                if (!selectedYear) {
                  updateChartWithDateContext(branchSelect.value, null, null);
                  return;
                }

                fetch('/store_product_batch/get_months_prod', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({ year: selectedYear })
                })
                  .then(res => res.json())
                  .then(data => {
                    const placeholder = document.createElement('option');
                    placeholder.value = '';
                    placeholder.textContent = '-- اختر الشهر --';
                    placeholder.disabled = true;
                    placeholder.selected = true;
                    monthSelect.appendChild(placeholder);

                    data.result.months.forEach(month => {
                      const option = document.createElement('option');
                      option.value = month;
                      option.textContent = month;
                      monthSelect.appendChild(option);
                    });

                    monthSelect.disabled = false;
                    updateChartWithDateContext(branchSelect.value, selectedYear, null);
                  });
              });

              // Month selection
              monthSelect.addEventListener('change', function () {
                const selectedMonth = this.value;
                const selectedYear = yearSelect.value;
                if (!selectedMonth || !selectedYear) return;
                updateChartWithDateContext(branchSelect.value, selectedYear, selectedMonth);
              });

              // Reset
              resetBtn.addEventListener('click', function () {
                yearSelect.value = '';
                <!-- yearSelect.innerHTML = ''; -->
                monthSelect.innerHTML = '';
                monthSelect.disabled = true;
                <!-- yearSelect.disabled = true; -->
                updateChartWithDateContext(branchSelect.value, null, null);
              });

              function updateChartWithDateContext(branchId, year, month) {

                fetch('/store_product_batch/chart_data_prod', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({"payload" : { branch:branchId, year, month }})  
                })
                  .then(response => response.json())
                  .then(option => {
                    chart.clear(); 
                    chart.setOption(option.result);
                  })
                  .catch(error => {
                    console.error('Failed to load chart data:', error);
                  });
              }
            });


            </script>


        </t>

        
        </t>
      </t>
    </template>
 </data>
  
</odoo>
